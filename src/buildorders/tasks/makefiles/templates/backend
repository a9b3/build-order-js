PORT ?= 8080
NODE_PATH := ./src
BUILD_DIR := ./build

all: help

help:
	@echo ""
	@echo "  deps                 - Installs dependencies"
	@echo "  db.start             - Starts the development dbs"
	@echo "  db.stop              - Stops the development dbs"
	@echo "  dev                  - Runs development server       PORT ?= ${PORT}"
	@echo "  lint                 - Runs linter"
	@echo "  test                 - Runs tests"
	@echo "  test.watch           - TDD"
	@echo "  build                - Transpile source code"
	@echo ""

deps:
	@yarn

db.start:
	@docker-compose -f docker-compose.yml up -d --remove-orphans

db.stop:
	@docker-compose -f docker-compose.yml down --remove-orphans

dev: deps db.start
	@NODE_PATH=$(NODE_PATH) PORT=${PORT} nodemon index.js | ./node_modules/bunyan/bin/bunyan --output short

lint:
	@./node_modules/eslint/bin/eslint.js .

test: db.start
	@APP_ENV=test NODE_PATH=$(NODE_PATH) \
		./node_modules/mocha/bin/mocha \
		--require babel-core/register \
		--require babel-polyfill \
		$$(find . -name '*.spec.js' ! -ipath '*node_modules*' ! -ipath '*$(BUILD_DIR)*')

test.watch: db.start
	@APP_ENV=test NODE_PATH=$(NODE_PATH) \
		./node_modules/mocha/bin/mocha \
		--require babel-core/register \
		--require babel-polyfill \
		--watch \
		$$(find . -name '*.spec.js' ! -ipath '*node_modules*' ! -ipath '*$(BUILD_DIR)*')

build:
	@yarn run build
